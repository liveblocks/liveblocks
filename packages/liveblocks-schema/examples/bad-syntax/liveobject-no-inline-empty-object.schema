type Foo { bad: LiveObject<"literal"> }
                           ^ Expected <type name> but "\"" found
---
type Foo { bad: LiveObject<{}> }
                           ^ Expected <type name> but "{" found
---
type Foo {
  bad: LiveObject<{ x: Int }>
                  ^ Expected <type name> but "{" found
}
---
type X {}
type Foo { bad: LiveObject<LiveObject<X>> }
                           ^ Expected <type name> but "L" found
---
type Foo { bad: LiveObject<LiveObject> }
                           ^ Expected <type name> but "L" found
---
type Bar {}
type Foo { bad: LiveObject<Bar[]> }
                              ^ Expected ">" but "[" found
---
type Bar {}
type Foo { bad: LiveObject<Bar[][]> }
                              ^ Expected ">" but "[" found
