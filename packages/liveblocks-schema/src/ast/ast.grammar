#
# Below you'll find the full AST specification. This is a simplistic
# specification format (a DSL) for specifying which AST node hierarchies are
# valid.
#
# This is used to generate the AST TypeScript module.
#

@BuiltInScalarType:
    | StringKeyword
    | IntKeyword
    | FloatKeyword
    | BooleanKeyword


# A custom user-defined type definition
@Definition:
    | ObjectTypeDef


# @Literal:
#     # | FloatLiteral
#     # | IntLiteral
#     | StringLiteral


@LiveTypeExpr:
    # | LiveListTypeExpr
    # | LiveMapTypeExpr
    | LiveObjectTypeExpr


@TypeExpr:
    # | @Literal
    | @BuiltInScalarType
    | @LiveTypeExpr
    | ObjectLiteralExpr
    | TypeRef


# Reference to a custom, user-defined, type. Not a built-in, not
# a "LiveObject". Things like "Circle", "BlogPost", etc.
TypeRef:
    name  TypeName


Document:
    definitions  @Definition+


FieldDef:
    name      Identifier
    optional  boolean
    type      @TypeExpr


# e.g. "Circle" or "Person" -- used in type positions
TypeName:
    name  string


# e.g. "x" or "y" -- used in field positions
Identifier:
    name  string


# e.g. "LiveObject<Shape>"
LiveObjectTypeExpr:
    of  TypeRef


# e.g. { cx: Number; cy: Number; r: Float }
ObjectLiteralExpr:
    fields  FieldDef*


# e.g. type Circle { cx: Number; cy: Number; r: Float }
ObjectTypeDef:
    name  TypeName
    obj   ObjectLiteralExpr


# StringLiteral:
#     value     string
#     rawValue  string


StringKeyword:
    dummy_  string?


IntKeyword:
    dummy_  string?


FloatKeyword:
    dummy_  string?


BooleanKeyword:
    dummy_  string?
