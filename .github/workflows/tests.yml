name: Tests

on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        bun-version: [latest]
        pkg:
          [
            "@liveblocks/core",
            "@liveblocks/client",
            "@liveblocks/react",
            "@liveblocks/redux",
            "@liveblocks/zustand",
            "@liveblocks/node",
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          key: turbo-cache-${{ matrix.node-version }}-${{ matrix.pkg }}-bust3
          path: node_modules/.cache/turbo
          restore-keys:
            turbo-cache-${{ matrix.node-version }}-${{ matrix.pkg }}-bust3

      - name: Build
        run: bun run build -- --filter ${{ matrix.pkg }}

      - name: Run unit tests
        run: bun run test -- --filter ${{ matrix.pkg }} -- --coverage

      - name: Run type tests
        run: bun run test:types -- --filter ${{ matrix.pkg }}

      - name: Run dependency tests
        run: bun run test:deps -- --filter ${{ matrix.pkg }}

      - name: Run lint checks
        run: bun run lint -- --filter ${{ matrix.pkg }}

      - name: Run public packaging lint checks
        run: bun run lint:package -- --filter ${{ matrix.pkg }}

  e2e-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        bun-version: [latest]

    timeout-minutes: 60

    env:
      LIVEBLOCKS_SECRET_KEY: ${{ secrets.E2E_TEST_LIVEBLOCKS_SECRET_KEY }}
      LIVEBLOCKS_SERVER: ${{ secrets.E2E_TEST_LIVEBLOCKS_SERVER }}
      LIVEBLOCKS_AUTHORIZE_ENDPOINT:
        ${{ secrets.E2E_TEST_LIVEBLOCKS_AUTHORIZE_ENDPOINT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install

      - name: Install Playwright
        run: npx playwright install chromium

      - name: Run Playwright tests
        run: bun run test -- --filter @liveblocks/next-sandbox

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: e2e/next-sandbox/playwright-report
          retention-days: 14

  e2e-client-specs-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [latest]

    timeout-minutes: 60

    env:
      LIVEBLOCKS_PUBLIC_KEY: ${{ secrets.E2E_TEST_LIVEBLOCKS_PUBLIC_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Run bun install
        run: bun install

      - name: Run e2e client specs tests
        run: bun run test:e2e
        working-directory: packages/liveblocks-core

  lang-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [latest]
        pkg: ["@liveblocks/schema", "@liveblocks/infer-schema"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          key: turbo-cache-${{ matrix.node-version }}-${{ matrix.pkg }}-bust3
          path: node_modules/.cache/turbo
          restore-keys:
            turbo-cache-${{ matrix.node-version }}-${{ matrix.pkg }}-bust3

      - name: Build
        run: bun run build -- --filter ${{ matrix.pkg }}

      - name: Ensure no files are changed
        run: |
          CHANGED=$(git status --porcelain)
          if [ -n "$CHANGED" ]; then
            echo "Local, uncommitted changes found:"
            echo "$CHANGED"
            exit 1
          fi

      - name: Run unit tests
        run: bun run test -- --filter ${{ matrix.pkg }}

      - name: Run lint checks
        run: bun run lint -- --filter ${{ matrix.pkg }}

      - name: Run public packaging lint checks
        run: bun run lint:package -- --filter ${{ matrix.pkg }}
