// union Shape = Rect | Circle

type RGB { r: number, g: number, b: number }

type Rect {
  type: "rect"
  x: number
  y: number
  width: number
  height: number
  fill: RGB
  stroke: RGB
  hellyeah: boolean
  nothin: null
}

type Circle {
  type: 'circle'  # Single-quoted
  cx: number
  cy: number
  radius: number
  fill: RGB
  stroke: RGB
}

type StaticCircle {
  type: "circle"  # Double-quoted
  cx: number
  cy: number
  radius: number
  fill: RGB
  stroke: RGB
}

type Storage {
  circles: LiveList<LiveObject<Circle>>
  circles2: LiveList<StaticCircle[]>
  circlesById: LiveMap<string, StaticCircle[]>
  circlesById2: LiveMap<string, StaticCircle[]>
  circles3: StaticCircle[]
  mycircle: LiveObject<Circle>
  myrect: LiveObject<Rect>
}
